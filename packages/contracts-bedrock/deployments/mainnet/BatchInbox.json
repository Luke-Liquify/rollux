{
  "address": "0xbB5714CEeEe1bD7785FD183198f36Bbd135Ab9c4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_messenger",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MESSENGER",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "batchData",
          "type": "bytes"
        }
      ],
      "name": "appendSequencerBatch",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_selector",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "batchData",
          "type": "bytes"
        }
      ],
      "name": "appendSequencerBatchToL2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc937afa14d616b9705ed05493a8f92019b95a8a59149f5605fc2efca53201bbe",
  "receipt": {
    "to": null,
    "from": "0xbcCC3Ba5e2F84A88d66f62A9fE260A7C303cf440",
    "contractAddress": "0xbB5714CEeEe1bD7785FD183198f36Bbd135Ab9c4",
    "transactionIndex": 6,
    "gasUsed": "597654",
    "logsBloom": "0x
    "blockHash": "0xad85aa7ed415a96392607ec4fff49fe8a524995f7639631d3067fc1fac23a321",
    "transactionHash": "0xc937afa14d616b9705ed05493a8f92019b95a8a59149f5605fc2efca53201bbe",
    "logs": [],
    "blockNumber": 312555,
    "cumulativeGasUsed": "1580712",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0f81C3c3131Fa326a046d1C6103EBea5377843a0"
  ],
  "numDeployments": 1,
  "solcInputHash": "d458283762cae8ddacc1c73ee8009dea",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_messenger\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"batchData\",\"type\":\"bytes\"}],\"name\":\"appendSequencerBatch\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_selector\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"batchData\",\"type\":\"bytes\"}],\"name\":\"appendSequencerBatchToL2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:proxied\":\"@title BatchInbox\",\"kind\":\"dev\",\"methods\":{\"appendSequencerBatchToL2(address,bytes,bytes)\":{\"params\":{\"_selector\":\"The function selector inside the L2 contract\",\"_target\":\"L2 contract where message will be received with PoDA hashes.\",\"batchData\":\"Array of keccak256 version hashes in segments of 32 bytes each\"}},\"constructor\":{\"custom:semver\":\"1.0.0\",\"params\":{\"_messenger\":\"The address of the messenger on this domain.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Messenger contract on this domain.\"},\"appendSequencerBatch(bytes)\":{\"notice\":\"appends an array of valid version hashes to the chain through calldata, each VH is checked via the VH precompile. the calldata should be contingious set of 32 byte version hashes to check via precompile. Will consume memory for 1 hash and check that the a hash value was parrtoed back to indicate validity.\"},\"appendSequencerBatchToL2(address,bytes,bytes)\":{\"notice\":\"appends an array of valid version hashes to the chain through calldata and sends message to L2BatchInbox, each VH is checked via the VH precompile. the calldata should be contingious set of 32 byte version hashes to check via precompile. Will consume memory for 1 hash and check that the a hash value was parrtoed back to indicate validity.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"Calldata entries of version hashes which are checked against the precompile of blobs to verify they exist\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1/BatchInbox.sol\":\"BatchInbox\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/L1/BatchInbox.sol\":{\"keccak256\":\"0x5c89b26c5ff176a9aba76ecd7d66b949ee60be807c1ca72c157d5155d4c88efd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6af9ee55cdfb9e7d7defd117541a8183ff40f6fb2ea67431533e9697782ef21\",\"dweb:/ipfs/QmNTjw2wRgHBYvFWPuAH3qzxmTM5JUCXpxTnv4cjbscife\"]},\"contracts/L1/ResourceMetering.sol\":{\"keccak256\":\"0xbd7b9532a70d8c842bfce0ea971be50d02fbbf0227c9ad55c71ac68d438010f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4969f478dd54e89392cda2ea0c5edcf1be55a5dee43a0e410527b6e3bcb85c88\",\"dweb:/ipfs/QmU2crAojw8DRDsz7PAPrereazjFsKh9wtfTpTDVh6NLfW\"]},\"contracts/libraries/Arithmetic.sol\":{\"keccak256\":\"0xc8858039f87e48e6f18c1af8bc0b03e57cfef564acddfd06e4d91e3db7ac5ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fc79af1e844aa6dc1c68067bfe1d359df8d4e9a3e8881afb3bcfcbf68071714\",\"dweb:/ipfs/QmcNC4k8zmvwj4kZizSenTiWbx2DJQPbwqXXLF4iMbkRVD\"]},\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x54233b226ba6919dc46d438bc790108d8f855001002a1b9c3c37aed7a83e5f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4051a4baca357a9191a6c9e3aa1593a17b69dd7915966e23e4cb269e9c1d9ed4\",\"dweb:/ipfs/QmadKjGKvxm53abVHQdsxrXBc8e9jXywu6vvhkAgjsx59J\"]},\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0x8c7be28a175eb732995a7f704560163c30261f9f70d377f865c5060882509f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f72aba26553b10ca88708e05461691b36b0d2ec7a87f718022fe119ca9c70852\",\"dweb:/ipfs/QmQtDEB1F3D8RsgG63KSJ9t7ZyFLaXc2Av81vKD9y2TMn7\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0x3deedbfc0a57228366531a4f09c94d174f0bb4ea49476a92226d471f3abb349b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8091b178f6710cb7738f07b1706fe18c241b6275b6641b32724d4ecf5a087dd\",\"dweb:/ipfs/Qmd5kchcZhHepJ3boHRTVDJUr9jsuweWEyoUmNmMFJB6vp\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x3c99b1e768cc4c1e064ccc137b1b4d5961bf4edf071be84cc216c5b20f1c00da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e36b2a6325c2f804d769271575669b62ab2da2df3c81921ac7487399fe02af07\",\"dweb:/ipfs/QmTCmcEKwvD8Xvjyev268Bkz27FC7TJpUbw1nADcsThnUr\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e\",\"dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]}},\"version\":1}",
  "bytecode": "0x61010060405234801561001157600080fd5b50604051610aa2380380610aa283398101604081905261003091610050565b6001608052600060a081905260c0526001600160a01b031660e052610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b60805160a05160c05160e0516109e36100bf600039600081816089015261022c015260006102fa015260006102d1015260006102a801526109e36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063465b6fcd1461005157806354fd4d5014610066578063927ede2d1461008457806398f05bb1146100d0575b600080fd5b61006461005f36600461056a565b6100e3565b005b61006e6102a1565b60405161007b9190610706565b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b6100646100de366004610720565b610344565b6040517f98f05bb100000000000000000000000000000000000000000000000000000000815230906398f05bb1906101219085908590600401610762565b60006040518083038186803b15801561013957600080fd5b505afa15801561014d573d6000803e3d6000fd5b5050505060008361015d906107af565b8383604051602401610170929190610762565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290517f3dbb202b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690633dbb202b906102689088908590620186a0906004016107ff565b600060405180830381600087803b15801561028257600080fd5b505af1158015610296573d6000803e3d6000fd5b505050505050505050565b60606102cc7f00000000000000000000000000000000000000000000000000000000000000006103b5565b6102f57f00000000000000000000000000000000000000000000000000000000000000006103b5565b61031e7f00000000000000000000000000000000000000000000000000000000000000006103b5565b60405160200161033093929190610844565b604051602081830303815290604052905090565b61034f6020826108e9565b1561035957600080fd5b60005b61036760208361092c565b81116103b0576040516020828237602081016040526000806020836063610578fa905080801561004c573d61039b57600080fd5b506103a99050602082610943565b905061035c565b505050565b6060816000036103f857505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610422578061040c8161095b565b915061041b9050600a83610993565b91506103fc565b60008167ffffffffffffffff81111561043d5761043d6104f2565b6040519080825280601f01601f191660200182016040528015610467576020820181803683370190505b5090505b84156104ea5761047c60018361092c565b9150610489600a866108e9565b610494906030610943565b60f81b8183815181106104a9576104a96109a7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506104e3600a86610993565b945061046b565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008083601f84011261053357600080fd5b50813567ffffffffffffffff81111561054b57600080fd5b60208301915083602082850101111561056357600080fd5b9250929050565b6000806000806060858703121561058057600080fd5b843573ffffffffffffffffffffffffffffffffffffffff811681146105a457600080fd5b9350602085013567ffffffffffffffff808211156105c157600080fd5b818701915087601f8301126105d557600080fd5b8135818111156105e7576105e76104f2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561062d5761062d6104f2565b816040528281528a602084870101111561064657600080fd5b82602086016020830137600060208483010152809750505050604087013591508082111561067357600080fd5b5061068087828801610521565b95989497509550505050565b60005b838110156106a757818101518382015260200161068f565b838111156106b6576000848401525b50505050565b600081518084526106d481602086016020860161068c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061071960208301846106bc565b9392505050565b6000806020838503121561073357600080fd5b823567ffffffffffffffff81111561074a57600080fd5b61075685828601610521565b90969095509350505050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b6000815160208301517fffffffff00000000000000000000000000000000000000000000000000000000808216935060048310156107f75780818460040360031b1b83161693505b505050919050565b73ffffffffffffffffffffffffffffffffffffffff8416815260606020820152600061082e60608301856106bc565b905063ffffffff83166040830152949350505050565b6000845161085681846020890161068c565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610892816001850160208a0161068c565b600192019182015283516108ad81600284016020880161068c565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826108f8576108f86108ba565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561093e5761093e6108fd565b500390565b60008219821115610956576109566108fd565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361098c5761098c6108fd565b5060010190565b6000826109a2576109a26108ba565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063465b6fcd1461005157806354fd4d5014610066578063927ede2d1461008457806398f05bb1146100d0575b600080fd5b61006461005f36600461056a565b6100e3565b005b61006e6102a1565b60405161007b9190610706565b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b6100646100de366004610720565b610344565b6040517f98f05bb100000000000000000000000000000000000000000000000000000000815230906398f05bb1906101219085908590600401610762565b60006040518083038186803b15801561013957600080fd5b505afa15801561014d573d6000803e3d6000fd5b5050505060008361015d906107af565b8383604051602401610170929190610762565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290517f3dbb202b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690633dbb202b906102689088908590620186a0906004016107ff565b600060405180830381600087803b15801561028257600080fd5b505af1158015610296573d6000803e3d6000fd5b505050505050505050565b60606102cc7f00000000000000000000000000000000000000000000000000000000000000006103b5565b6102f57f00000000000000000000000000000000000000000000000000000000000000006103b5565b61031e7f00000000000000000000000000000000000000000000000000000000000000006103b5565b60405160200161033093929190610844565b604051602081830303815290604052905090565b61034f6020826108e9565b1561035957600080fd5b60005b61036760208361092c565b81116103b0576040516020828237602081016040526000806020836063610578fa905080801561004c573d61039b57600080fd5b506103a99050602082610943565b905061035c565b505050565b6060816000036103f857505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610422578061040c8161095b565b915061041b9050600a83610993565b91506103fc565b60008167ffffffffffffffff81111561043d5761043d6104f2565b6040519080825280601f01601f191660200182016040528015610467576020820181803683370190505b5090505b84156104ea5761047c60018361092c565b9150610489600a866108e9565b610494906030610943565b60f81b8183815181106104a9576104a96109a7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506104e3600a86610993565b945061046b565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008083601f84011261053357600080fd5b50813567ffffffffffffffff81111561054b57600080fd5b60208301915083602082850101111561056357600080fd5b9250929050565b6000806000806060858703121561058057600080fd5b843573ffffffffffffffffffffffffffffffffffffffff811681146105a457600080fd5b9350602085013567ffffffffffffffff808211156105c157600080fd5b818701915087601f8301126105d557600080fd5b8135818111156105e7576105e76104f2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561062d5761062d6104f2565b816040528281528a602084870101111561064657600080fd5b82602086016020830137600060208483010152809750505050604087013591508082111561067357600080fd5b5061068087828801610521565b95989497509550505050565b60005b838110156106a757818101518382015260200161068f565b838111156106b6576000848401525b50505050565b600081518084526106d481602086016020860161068c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061071960208301846106bc565b9392505050565b6000806020838503121561073357600080fd5b823567ffffffffffffffff81111561074a57600080fd5b61075685828601610521565b90969095509350505050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b6000815160208301517fffffffff00000000000000000000000000000000000000000000000000000000808216935060048310156107f75780818460040360031b1b83161693505b505050919050565b73ffffffffffffffffffffffffffffffffffffffff8416815260606020820152600061082e60608301856106bc565b905063ffffffff83166040830152949350505050565b6000845161085681846020890161068c565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610892816001850160208a0161068c565b600192019182015283516108ad81600284016020880161068c565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826108f8576108f86108ba565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561093e5761093e6108fd565b500390565b60008219821115610956576109566108fd565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361098c5761098c6108fd565b5060010190565b6000826109a2576109a26108ba565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "appendSequencerBatchToL2(address,bytes,bytes)": {
        "params": {
          "_selector": "The function selector inside the L2 contract",
          "_target": "L2 contract where message will be received with PoDA hashes.",
          "batchData": "Array of keccak256 version hashes in segments of 32 bytes each"
        }
      },
      "constructor": {
        "params": {
          "_messenger": "The address of the messenger on this domain."
        }
      },
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSENGER()": {
        "notice": "Messenger contract on this domain."
      },
      "appendSequencerBatch(bytes)": {
        "notice": "appends an array of valid version hashes to the chain through calldata, each VH is checked via the VH precompile. the calldata should be contingious set of 32 byte version hashes to check via precompile. Will consume memory for 1 hash and check that the a hash value was parrtoed back to indicate validity."
      },
      "appendSequencerBatchToL2(address,bytes,bytes)": {
        "notice": "appends an array of valid version hashes to the chain through calldata and sends message to L2BatchInbox, each VH is checked via the VH precompile. the calldata should be contingious set of 32 byte version hashes to check via precompile. Will consume memory for 1 hash and check that the a hash value was parrtoed back to indicate validity."
      },
      "version()": {
        "notice": "Returns the full semver contract version."
      }
    },
    "notice": "Calldata entries of version hashes which are checked against the precompile of blobs to verify they exist"
  }
}